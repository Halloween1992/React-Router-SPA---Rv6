{"version":3,"sources":["components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js"],"names":["module","exports","NoQuotesFound","className","classes","noquotes","to","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAcending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","status","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,yHCa5CC,EAXO,WACpB,OACE,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMC,GAAI,aAAcH,UAAU,MAAlC,6B,wBCYSI,EAhBG,SAACC,GACjB,OACE,qBAAIL,UAAWC,IAAQK,KAAvB,UACE,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAErB,cAAC,IAAD,CAAMR,UAAU,MAAMG,GAAE,kBAAaE,EAAMI,IAA3C,2B,iBCwCSC,EApCG,SAACL,GACjB,IAXkBM,EAAQC,EAWpBC,EAAWC,cACXC,EAAWC,cAGXC,EAA+C,QADlC,IAAIC,gBAAgBH,EAASI,QACXC,IAAI,QAEnCC,GAjBYV,EAiBcN,EAAMM,OAjBZC,EAiBoBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAoBxC,OACE,eAAC,WAAD,WACE,qBAAKT,UAAWC,IAAQwB,QAAxB,SACE,yBAAQC,QATY,WACxBb,EAAS,GAAD,OACHE,EAASY,SADN,kBACwBV,EAAoB,OAAS,SAOzD,kBACQA,EAAoB,YAAc,iBAG5C,oBAAIjB,UAAWC,IAAQ2B,KAAvB,SACGP,EAAaQ,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEErB,GAAIqB,EAAMrB,GACVD,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMrB,a,uBClCR,SAASsB,EAAU1B,GAChC,MAA6C2B,YAAQC,KAAc,GAA3DC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,MAMnC,OAJAC,qBAAU,WACRJ,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKnC,UAAU,mBAAf,SACE,cAACuC,EAAA,EAAD,MAKFF,EAEA,qBAAKrC,UAAU,mBAAf,SACE,4BAAIqC,MAKK,cAAXF,GAA4BC,GAAwB,IAAhBA,EAAKI,OAK3C,mCACE,cAAC,EAAD,CAAW7B,OAAQyB,MALd,cAAC,EAAD","file":"static/js/5.cf2e81da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__23NUm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__hJsXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1c8sO\",\"sorting\":\"QuoteList_sorting__2BH7S\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to={\"/new-quote\"} className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        Read More\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParam = new URLSearchParams(location.search);\n  const isSortingAcending = queryParam.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAcending);\n\n  const changeQueryParams = () => {\n    navigate(\n      `${location.pathname}/?sort=${isSortingAcending ? \"desc\" : \"asc\"}`\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeQueryParams}>\n          Sort {isSortingAcending ? \"Ascending\" : \"Decending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nexport default function AllQuotes(props) {\r\n  const { sendRequest, status, data, error } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered focused\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"centered focused\">\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === \"completed\" && (!data || data.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <QuoteList quotes={data} />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}